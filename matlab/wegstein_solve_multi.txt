function [ROOT, ITER] = wegstein_solve_multi(func, x0, xmax, xmin):

ITER = 0;

while ITER < 100
        
	ITER = ITER + 1;
        
        x1 = func(x0); x2 = func(x1); fx2 = func(x2);

	for i = 1:length(x1)
		a(i) = x2(i) - x1(i);
		if a(i) == 0
			slope(i) = 0;
		else
			slope(i) = (fx2(i) - x2(i)) / (x2(i) - x1(i));

		end

		b(i) = 1 - slope;
		if b(i) == 1
			teta(i) = 1;
		else
			teta(i) = 1/(1 - slope(i));

		end
	end

	          
	if teta > xmax
			teta = xmax;
	
	elseif teta < xmin
			teta = xmin;

	end

        x0 = (1 - teta).*x2 + teta.*fx2

        if abs(x0 - x1) <= (1e-6).*(abs(x0))
		break

	end

end

ROOT = x0;

end
       
        
    return x0, i



